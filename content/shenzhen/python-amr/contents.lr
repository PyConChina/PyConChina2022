title: 基于 Python 生态快速构建 AMR 调度系统/Python 赋能智慧物流
---
body:

随着电子商务、互联网的发展和《智能制造2025》的加速实施，无人化和智能物流的优势已经显现，减少了对企业员工的需求，提高了生产流程的数字化。在这种背景下，AMR 调度系统和仿真模型的开发完全使用 Python 及其开源生态快速实现。调度系统实现了任务控制、流量控制、自动充值、异常处理和断点处理等基本功能，并使用 scipy 在人工智能中引入聚类算法，实现地图热点区域的识别，并与时间窗口协作完成任务调度和 AMR 冲突避免要求。得益于完整的 Python 生态，系统引入了 Redis、mqtt、http、gmssl 等工具或协议，以实现系统的状态缓存、本体通信和后端前端通信。得益于 Python 固有的面向对象编程友好的实现和语言特性，调度系统抽象了任务、AMR 和映射元素，完整的异常捕获提高了系统的健壮性，也大大加快了项目启动和后期功能迭代，并大大降低了开发人力和维护成本。

与市场上传统的 AMR 调度系统存在部署繁琐等问题不同，该平台通过 Django 实现了将系统在公共网络上在线和在局域网上快速部署的能力，并且系统也更加轻量级。
同时，开发了 AMR 仿真模型，剥离了本体导航逻辑，实现了基于 slam/2D 场景的多线程启动、状态机、运动、定位和任务状态的 AMR 仿真，用于场景仿真和解决方案演示。该模型充分遵循 OOP 思想，设计任务类别，定位任务开始、暂停、继续和结束方法，通过回调函数触发要报告给状态机模型的任务状态更改，触发要报告的状态更改和子任务结果，不同任务（导航、充电、运动）继承任务类别，并根据需要重写相关方法。
---
bio: 深圳优奇智行科技有限公司
---
introduction:

机械电子工程研究生毕业，2020年入职深圳优必选科技从事智慧物流行业，2022年原 bu 成立优奇智行。两年 agv/amr 调度系统开发经验，技术栈使用 Python 及其完整的生态，后台使用 Django，控制系统自研，使用了 redis、mqtt、http。实现了大规模 amr 控制及仿真，由于疫情及人工智能技术发展，物流无人化及产线智能化促进了 agv/amr 行业的发展，利用 Python 语言中的 oop 及 zen 的思想加上完善的开源生态，使得开发人员数量大大减少（实际就2名），产品上线速度增快。

---
speaker: 康昊
---
avatar: kang-hao.jpg
---
start_date: 2022-12-17 14:20:00 Asia/Shanghai
